---

- name: tig
  hosts: test
  become: true

  tasks:

  ### Repos ###
    - name: Add Repo Keys
      apt_key:
        url: "{{ item }}"
        state: present
      loop:
        - https://repos.influxdata.com/influxdb.key
        - https://packages.grafana.com/gpg.key

    - name: Add Repos
      apt_repository:
        repo: "{{ item }}"
        state: present
      loop:
        - "deb https://repos.influxdata.com/{{ ansible_facts['distribution']|lower }} {{ ansible_facts['distribution_release'] }} stable"
        - "deb https://packages.grafana.com/oss/deb stable main"

    - name: Install Packages
      apt:
        update_cache: yes
        pkg: "{{ item }}"
      loop:
        - influxdb
        - telegraf
        - grafana
        - loki
        - fontconfig
        - freetype*
        - fonts-texgyre
        - python3-pip

    - name: pip influxdb
      pip:
        name: influxdb

    - name: Enable and start Influxdb and Grafana
      service:
        name: influxdb
        enabled: yes
        state: started
      loop:
        - influxdb
        - grafana-server

  ### Influxdb
    - name: Wait influxdb service to be ready
      wait_for:
        timeout: 10

    - name: create Influx database and creds
      community.general.influxdb_database:
        hostname: 127.0.0.1
        database_name: telegraf

    - name: create user admin
      community.general.influxdb_user:
        user_name: "{{ influxdb_admin_name }}"
        user_password: "{{ influxdb_admin_password }}"
        admin: yes

    - name: create user telegraf
      community.general.influxdb_user:
        user_name: "{{ influxdb_user_name }}"
        user_password: "{{ influxdb_user_password }}"
        grants:
          - database: telegraf
            privilege: 'ALL'

    - name: Change influxdb to login
      lineinfile:
        path: /etc/influxdb/influxdb.conf
        line: "   auth-enabled = true"
        insertafter: "# auth-enabled = false"

    - name: Restart Influxdb
      service:
        name: influxdb
        enabled: yes
        state: restarted

  ### Telegraf
    - name: Copy Telegraf config
      template:
        src: files/telegraf.conf.j2
        dest: /etc/telegraf/telegraf.conf
        mode: 0644
        force: yes

    - name: Enable and start Telegraf
      service:
        name: telegraf
        enabled: yes
        state: started

  ### Grafana
    - name: Create influxdb datasource
      grafana_datasource:
        name: influxdb
        grafana_url: http://localhost:3000
        grafana_user: admin
        grafana_password: admin
        ds_type: influxdb
        ds_url: 127.0.0.1:8086
        database: telegraf
        basic_auth_user: "{{ influxdb_user_name }}"
        basic_auth_password: "{{ influxdb_user_password }}"
        time_interval: ">10s"
      tags:
        - grafana
        - datasource

    - name: Prepare dashboard import
      template:
        src: files/dashboard_telegraf.json.j2
        dest: /tmp/dashboard_telegraf.json
      tags: 
        - grafana
        - dashboard

    - name: Import Grafana dashboard 
      community.grafana.grafana_dashboard:
        grafana_url: http://localhost:3000
        grafana_user: admin
        grafana_password: admin
        path: /tmp/dashboard_telegraf.json
        overwrite: yes
      tags: 
        - grafana
        - dashboard
